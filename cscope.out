cscope 15 $HOME/Projects/net -q 0000000151 0000010736
	@CMakeFiles/CompilerIdC/CMakeCCompilerId.c

1 #ifde‡
__˝lu•lus


5 #i‡
deföed
(
__18CXX
)

6 
	#ID_VOID_MAIN


	)

9 #i‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICC
)

10 
	#COMPILER_ID
 "I¡ñ"

	)

12 #ñi‡
deföed
(
__BORLANDC__
)

13 
	#COMPILER_ID
 "B‹œnd"

	)

15 #ñi‡
deföed
(
__WATCOMC__
)

16 
	#COMPILER_ID
 "W©com"

	)

18 #ñi‡
deföed
(
__SUNPRO_C
)

19 
	#COMPILER_ID
 "SunPro"

	)

21 #ñi‡
deföed
(
__HP_cc
)

22 
	#COMPILER_ID
 "HP"

	)

24 #ñi‡
deföed
(
__DECC
)

25 
	#COMPILER_ID
 "Com∑q"

	)

27 #ñi‡
deföed
(
__IBMC__
)

28 
	#COMPILER_ID
 "VisuÆAge"

	)

30 #ñi‡
deföed
(
__PGI
)

31 
	#COMPILER_ID
 "PGI"

	)

33 #ñi‡
deföed
(
__GNUC__
)

34 
	#COMPILER_ID
 "GNU"

	)

36 #ñi‡
deföed
(
_MSC_VER
)

37 
	#COMPILER_ID
 "MSVC"

	)

39 #ñi‡
deföed
(
__ADSPBLACKFIN__
Ë|| deföed(
__ADSPTS__
Ë|| deföed(
__ADSP21000__
)

42 
	#COMPILER_ID
 "ADSP"

	)

52 #ñi‡
deföed
(
SDCC
)

53 
	#COMPILER_ID
 "SDCC"

	)

55 #ñi‡
deföed
(
_COMPILER_VERSION
)

56 
	#COMPILER_ID
 "MIPS¥o"

	)

61 #ñi‡
deföed
(
__sgi
)

62 
	#COMPILER_ID
 "MIPS¥o"

	)

64 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpua
)

65 
	#COMPILER_ID
 "HP"

	)

68 
	#COMPILER_ID
 ""

	)

76 * 
	göfo_compûî
 = "INFO" ":" "compûî[" 
COMPILER_ID
 "]";

79 #i‡
deföed
(
__löux
Ë|| deföed(
__löux__
Ë|| deföed(
löux
)

80 
	#PLATFORM_ID
 "Löux"

	)

82 #ñi‡
deföed
(
__CYGWIN__
)

83 
	#PLATFORM_ID
 "Cygwö"

	)

85 #ñi‡
deföed
(
__MINGW32__
)

86 
	#PLATFORM_ID
 "MöGW"

	)

88 #ñi‡
deföed
(
__APPLE__
)

89 
	#PLATFORM_ID
 "D¨wö"

	)

91 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

92 
	#PLATFORM_ID
 "Wödows"

	)

94 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD
)

95 
	#PLATFORM_ID
 "FªeBSD"

	)

97 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__NëBSD
)

98 
	#PLATFORM_ID
 "NëBSD"

	)

100 #ñi‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__OPENBSD
)

101 
	#PLATFORM_ID
 "O≥nBSD"

	)

103 #ñi‡
deföed
(
__sun
Ë|| deföed(
sun
)

104 
	#PLATFORM_ID
 "SunOS"

	)

106 #ñi‡
deföed
(
_AIX
Ë|| deföed(
__AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix
Ë|| deföed(
__aix__
)

107 
	#PLATFORM_ID
 "AIX"

	)

109 #ñi‡
deföed
(
__sgi
Ë|| deföed(
__sgi__
Ë|| deföed(
_SGI
)

110 
	#PLATFORM_ID
 "IRIX"

	)

112 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpux__
)

113 
	#PLATFORM_ID
 "HP-UX"

	)

115 #ñi‡
deföed
(
__HAIKU
Ë|| deföed(
__HAIKU__
Ë|| deföed(
_HAIKU
)

116 
	#PLATFORM_ID
 "Haiku"

	)

121 #ñi‡
deföed
(
__BeOS
Ë|| deföed(
__BEOS__
Ë|| deföed(
_BEOS
)

122 
	#PLATFORM_ID
 "BeOS"

	)

124 #ñi‡
deföed
(
__QNX__
Ë|| deföed(
__QNXNTO__
)

125 
	#PLATFORM_ID
 "QNX"

	)

127 #ñi‡
deföed
(
__åu64
Ë|| deföed(
_åu64
Ë|| deföed(
__TRU64__
)

128 
	#PLATFORM_ID
 "Tru64"

	)

130 #ñi‡
deföed
(
__riscos
Ë|| deföed(
__riscos__
)

131 
	#PLATFORM_ID
 "RISCos"

	)

133 #ñi‡
deföed
(
__söix
Ë|| deföed(
__söix__
Ë|| deföed(
__SINIX__
)

134 
	#PLATFORM_ID
 "SINIX"

	)

136 #ñi‡
deföed
(
__UNIX_SV__
)

137 
	#PLATFORM_ID
 "UNIX_SV"

	)

139 #ñi‡
deföed
(
__bsdos__
)

140 
	#PLATFORM_ID
 "BSDOS"

	)

142 #ñi‡
deföed
(
_MPRAS
Ë|| deföed(
MPRAS
)

143 
	#PLATFORM_ID
 "MP-RAS"

	)

145 #ñi‡
deföed
(
__osf
Ë|| deföed(
__osf__
)

146 
	#PLATFORM_ID
 "OSF1"

	)

148 #ñi‡
deföed
(
_SCO_SV
Ë|| deföed(
SCO_SV
Ë|| deföed(
sco_sv
)

149 
	#PLATFORM_ID
 "SCO_SV"

	)

151 #ñi‡
deföed
(
__u…rix
Ë|| deföed(
__u…rix__
Ë|| deföed(
_ULTRIX
)

152 
	#PLATFORM_ID
 "ULTRIX"

	)

154 #ñi‡
deföed
(
__XENIX__
Ë|| deföed(
_XENIX
Ë|| deföed(
XENIX
)

155 
	#PLATFORM_ID
 "Xíix"

	)

158 
	#PLATFORM_ID
 ""

	)

166 * 
	göfo_∂©f‹m
 = "INFO" ":" "∂©f‹m[" 
PLATFORM_ID
 "]";

171 #ifde‡
ID_VOID_MAIN


172 
	$maö
(Ë{
	}
}

174 
	$maö
(
¨gc
, * 
¨gv
[])

176 
ªquúe
 = 0;

177 
ªquúe
 +
öfo_compûî
[
¨gc
];

178 
ªquúe
 +
öfo_∂©f‹m
[
¨gc
];

179 ()
¨gv
;

180  
ªquúe
;

181 
	}
}

	@CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp

4 #i‚de‡
__˝lu•lus


8 #i‡
deföed
(
__COMO__
)

9 
	#COMPILER_ID
 "Comóu"

	)

11 #ñi‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICC
)

12 
	#COMPILER_ID
 "I¡ñ"

	)

14 #ñi‡
deföed
(
__BORLANDC__
)

15 
	#COMPILER_ID
 "B‹œnd"

	)

17 #ñi‡
deföed
(
__WATCOMC__
)

18 
	#COMPILER_ID
 "W©com"

	)

20 #ñi‡
deföed
(
__SUNPRO_CC
)

21 
	#COMPILER_ID
 "SunPro"

	)

23 #ñi‡
deföed
(
__HP_aCC
)

24 
	#COMPILER_ID
 "HP"

	)

26 #ñi‡
deföed
(
__DECCXX
)

27 
	#COMPILER_ID
 "Com∑q"

	)

29 #ñi‡
deföed
(
__IBMCPP__
)

30 
	#COMPILER_ID
 "VisuÆAge"

	)

32 #ñi‡
deföed
(
__PGI
)

33 
	#COMPILER_ID
 "PGI"

	)

35 #ñi‡
deföed
(
__GNUC__
)

36 
	#COMPILER_ID
 "GNU"

	)

38 #ñi‡
deföed
(
_MSC_VER
)

39 
	#COMPILER_ID
 "MSVC"

	)

41 #ñi‡
deföed
(
__ADSPBLACKFIN__
Ë|| deföed(
__ADSPTS__
Ë|| deföed(
__ADSP21000__
)

44 
	#COMPILER_ID
 "ADSP"

	)

46 #ñi‡
deföed
(
_COMPILER_VERSION
)

47 
	#COMPILER_ID
 "MIPS¥o"

	)

52 #ñi‡
deföed
(
__sgi
)

53 
	#COMPILER_ID
 "MIPS¥o"

	)

55 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpua
)

56 
	#COMPILER_ID
 "HP"

	)

59 
	#COMPILER_ID
 ""

	)

67 * 
	göfo_compûî
 = "INFO" ":" "compûî[" 
COMPILER_ID
 "]";

70 #i‡
deföed
(
__löux
Ë|| deföed(
__löux__
Ë|| deföed(
löux
)

71 
	#PLATFORM_ID
 "Löux"

	)

73 #ñi‡
deföed
(
__CYGWIN__
)

74 
	#PLATFORM_ID
 "Cygwö"

	)

76 #ñi‡
deföed
(
__MINGW32__
)

77 
	#PLATFORM_ID
 "MöGW"

	)

79 #ñi‡
deföed
(
__APPLE__
)

80 
	#PLATFORM_ID
 "D¨wö"

	)

82 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

83 
	#PLATFORM_ID
 "Wödows"

	)

85 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD
)

86 
	#PLATFORM_ID
 "FªeBSD"

	)

88 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__NëBSD
)

89 
	#PLATFORM_ID
 "NëBSD"

	)

91 #ñi‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__OPENBSD
)

92 
	#PLATFORM_ID
 "O≥nBSD"

	)

94 #ñi‡
deföed
(
__sun
Ë|| deföed(
sun
)

95 
	#PLATFORM_ID
 "SunOS"

	)

97 #ñi‡
deföed
(
_AIX
Ë|| deföed(
__AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix
Ë|| deföed(
__aix__
)

98 
	#PLATFORM_ID
 "AIX"

	)

100 #ñi‡
deföed
(
__sgi
Ë|| deföed(
__sgi__
Ë|| deföed(
_SGI
)

101 
	#PLATFORM_ID
 "IRIX"

	)

103 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpux__
)

104 
	#PLATFORM_ID
 "HP-UX"

	)

106 #ñi‡
deföed
(
__HAIKU
Ë|| deföed(
__HAIKU__
Ë|| deföed(
_HAIKU
)

107 
	#PLATFORM_ID
 "Haiku"

	)

112 #ñi‡
deföed
(
__BeOS
Ë|| deföed(
__BEOS__
Ë|| deföed(
_BEOS
)

113 
	#PLATFORM_ID
 "BeOS"

	)

115 #ñi‡
deföed
(
__QNX__
Ë|| deföed(
__QNXNTO__
)

116 
	#PLATFORM_ID
 "QNX"

	)

118 #ñi‡
deföed
(
__åu64
Ë|| deföed(
_åu64
Ë|| deföed(
__TRU64__
)

119 
	#PLATFORM_ID
 "Tru64"

	)

121 #ñi‡
deföed
(
__riscos
Ë|| deföed(
__riscos__
)

122 
	#PLATFORM_ID
 "RISCos"

	)

124 #ñi‡
deföed
(
__söix
Ë|| deföed(
__söix__
Ë|| deföed(
__SINIX__
)

125 
	#PLATFORM_ID
 "SINIX"

	)

127 #ñi‡
deföed
(
__UNIX_SV__
)

128 
	#PLATFORM_ID
 "UNIX_SV"

	)

130 #ñi‡
deföed
(
__bsdos__
)

131 
	#PLATFORM_ID
 "BSDOS"

	)

133 #ñi‡
deföed
(
_MPRAS
Ë|| deföed(
MPRAS
)

134 
	#PLATFORM_ID
 "MP-RAS"

	)

136 #ñi‡
deföed
(
__osf
Ë|| deföed(
__osf__
)

137 
	#PLATFORM_ID
 "OSF1"

	)

139 #ñi‡
deföed
(
_SCO_SV
Ë|| deföed(
SCO_SV
Ë|| deföed(
sco_sv
)

140 
	#PLATFORM_ID
 "SCO_SV"

	)

142 #ñi‡
deföed
(
__u…rix
Ë|| deföed(
__u…rix__
Ë|| deföed(
_ULTRIX
)

143 
	#PLATFORM_ID
 "ULTRIX"

	)

145 #ñi‡
deföed
(
__XENIX__
Ë|| deföed(
_XENIX
Ë|| deföed(
XENIX
)

146 
	#PLATFORM_ID
 "Xíix"

	)

149 
	#PLATFORM_ID
 ""

	)

157 * 
	göfo_∂©f‹m
 = "INFO" ":" "∂©f‹m[" 
PLATFORM_ID
 "]";

162 
	$maö
(
¨gc
, * 
¨gv
[])

164 
ªquúe
 = 0;

165 
ªquúe
 +
öfo_compûî
[
¨gc
];

166 
ªquúe
 +
öfo_∂©f‹m
[
¨gc
];

167 ()
¨gv
;

168  
ªquúe
;

169 
	}
}

	@common.h

1 #i‚de‡
_COMMON_H_


2 
	#_COMMON_H_


	)

5 
	#DECLARE_SINGLETON
(
T
) \

6 
public
: \

7 
T
* 
	`GëIn°™˚
() \

9 
T
 
ö°™˚_
; \

10  &
ö°™˚_
; \

12 
¥iv©e
: \

13 
	`T
(); \

14 
	`T
(c⁄° 
T
&); \

15 
T
& 
›î©‹
=(const T&); \

16 ~
	`T
(); \

18 

	)

	@net_test.h

1 
	~"comm⁄.h
"

2 
	~"ã°_ù.h
"

3 
	~"ã°_ho°«me.h
"

4 
	~"ã°_ídün.h
"

5 
	~"ã°_t˝.h
"

6 
	~<°rög
>

7 
	~<°dio.h
>

8 
	~<m≠
>

9 
usög
 
«me•a˚
 
	g°d
;

11 ˛as†
	cNëTe°


13 
	mpublic
:

14 
	$Te°
(
°rög
 
key
, 
¨gc
, ** 
¨gv
)

16 autÿ
ôî
 = 
m≠_fun
.
	`föd
(
key
);

17 if(
ôî
!=
m≠_fun
.
	`íd
())

19 (
ôî
->
£c⁄d
)(
¨gc
, 
¨gv
);

23 
	`¥ötf
("Function Not Found!\n");

27 
¥iv©e
:

28 (*
	tTe°Fun
)(
	t¨gc
, ** 
	t¨gv
);

29 
m≠
<
	t°rög
, 
	tTe°Fun
> 
	tTe°FunM≠
;

30 
Te°FunM≠
 
m≠_fun
;

32 
	$Regi°Te°Fun
(
°rög
 
key
, 
Te°Fun
 
fun
)

34 
m≠_fun
.
	`ö£π
(
	`make_∑ú
(
key
,
fun
));

35 
	}
}

37 
DECLARE_SINGLETON
(
NëTe°
);

40 
	gNëTe°
::
	$NëTe°
()

42 
	`Regi°Te°Fun
("ù", 
Te°IP
::
Te°
);

43 
	`Regi°Te°Fun
("ho°«me", 
Te°Ho°«me
::
Te°
);

44 
	`Regi°Te°Fun
("ídün", 
Te°Endün
::
Te°
);

45 
	`Regi°Te°Fun
("t˝", 
Te°T˝
::
Te°
);

46 
	}
}

48 
	gNëTe°
::~
	$NëTe°
()

50 
	}
}

	@test_endian.h

1 
	~<°dio.h
>

3 ˛as†
	cTe°Endün


5 
	mpublic
:

6 
	$Te°
(
¨gc
, ** 
¨gv
)

8 
x
 = 0x11223344;

9 *
c
 = (*)&
x
;

11 if(0x11==*
c
)

13 
	`¥ötf
("Big Endian\n");

17 
	`¥ötf
("Little Endian\n");

20 
	}
};

	@test_hostname.h

1 
	~<°dio.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

5 
	~<√tdb.h
>

7 ˛as†
	cTe°Ho°«me


9 
	mpublic
:

10 
	$Te°
(
¨gc
, ** 
¨gv
)

12 if(
¨gc
<3)

14 
	`¥ötf
("TestHostname Invalid Args!\n");

17 
	`¥ötf
("InÅest_hostname.Test");

18 
ho°ít
 *
ho°
;

19 
ªt
 = 0;

20 if(
ho°
 = 
	`gëho°by«me
(
¨gv
[2]))

22 
	`¥ötf
("«mê%s\n", 
ho°
->
h_«me
);

23 
	`¥ötf
("Æü£†%s\n", 
ho°
->
h_Æü£s
);

24 
	`¥ötf
("addty≥ = %d\n", 
ho°
->
h_addπy≥
);

28 
	`¥ötf
("Invalid!\n");

31 
	}
};

	@test_ip.h

1 
	~<°dio.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

6 ˛as†
	cTe°IP


8 
	mpublic
:

9 
	$Te°
(
¨gc
, ** 
¨gv
)

11 if(
¨gc
<3)

13 
	`¥ötf
("TestIP Invalid Args!\n");

16 
ö_addr
 
addr
;

17 
ªt
 = 0;

18 if(
ªt
 = 
	`öë_©⁄
(
¨gv
[2], &
addr
))

20 
	`¥ötf
("ªà%d\n", 
ªt
);

21 
	`¥ötf
("add∏%x\n", 
addr
.
s_addr
);

22 * 
c
 = (*)&
addr
;

23 
	`¥ötf
("IP1 = %x.%x.%x.%x\n", (*
c
)&0xff, *(c+1)&0xff, *(c+2)&0xff, *(c+3)&0xff);

24 
	`¥ötf
("IP1 = %u.%u.%u.%u\n", (*
c
)&0xff, *(c+1)&0xff, *(c+2)&0xff, *(c+3)&0xff);

28 
	`¥ötf
("Invalid!\n");

31 
	}
};

	@test_main.cpp

1 
	~"√t_ã°.h
"

3 
	$maö
(
¨gc
, ** 
¨gv
)

5 if(
¨gc
<2)

7 
	`¥ötf
("Argument Invalid!\n");

10 
NëTe°
 *
ã°
 = 
nuŒ±r
;

11 
ã°
 = 
NëTe°
::
	`GëIn°™˚
();

12 
ã°
->
	`Te°
(
¨gv
[1], 
¨gc
,árgv);

13 
	}
}

	@test_tcp.h

1 
	~<°dio.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

6 ˛as†
	cTe°T˝


8 
	mpublic
:

9 
	$Te°
(
¨gc
, ** 
¨gv
)

11 
	`¥ötf
("TestTcp::Test!\n");

14 
¥iv©e
:

15 
	}
};

	@test_udp.h

1 
	~<°dio.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

6 ˛as†
	cTe°Udp


8 
	mpublic
:

9 
	$Te°
(
¨gc
, ** 
¨gv
)

11 
	`¥ötf
("TestUdp::Test!\n");

14 
¥iv©e
:

15 
	}
};

	@
1
.
0
10
186
CMakeFiles/CompilerIdC/CMakeCCompilerId.c
CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp
common.h
net_test.h
test_endian.h
test_hostname.h
test_ip.h
test_main.cpp
test_tcp.h
test_udp.h
